# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Sat Sep 23 14:59:25 2023
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b''))